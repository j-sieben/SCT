create table sct_action_type(
  sat_id varchar2(50 char),
  sat_stg_id varchar2(50 char),
  sat_sif_id varchar2(50 char),
	sat_name varchar2(50 char), 
  sat_description clob,
	sat_pl_sql varchar2(200 byte), 
	sat_js varchar2(200 byte), 
  sat_is_editable char(1) default 'Y', 
	sat_raise_recursive char(1) default 'Y',
	constraint p_sct_action_type primary key (sat_id),
  constraint fk_sat_stg_id foreign key(sat_stg_id)
    references sct_action_type_group(stg_id),
  constraint fk_sat_stg_id foreign key(sat_stg_id)
    references sct_action_type_group(stg_id),
  constraint c_sat_is_editable check (sat_is_editable in ('Y', 'N')),
  constraint c_sat_raise_recursive check(sat_raise_recursive in ('Y', 'N'))
) 
organization index;

create index idx_fk_sat_stg_id on sct_action_type(sat_stg_id);
create index idx_fk_sat_sif_id on sct_action_type(sat_sif_id);


comment on table sct_action_type is 'Tabel to store different action types as template for actions';
comment on column sct_action_type.sat_id is 'PK, alphanumeric key';
comment on column sct_action_type.sat_stg_id is 'FK, Reference to SCT_ACTION_TYPE_GROUP, used to group action types on the UI';
comment on column sct_action_type.sat_sif_id is 'FK, Reference to SCT_ACTION_ITEM_FOCUS, used to limit the kind of items the action may reference';
comment on column sct_action_type.sat_name is 'Display name';
comment on column sct_action_type.sat_description is 'Optional description, is shown as a help text';
comment on column sct_action_type.sat_pl_sql is 'PL/SQL pattern to implement the functionality in PL/SQL';
comment on column sct_action_type.sat_js is 'JavaScript pattern to implement the functionality in JS';
comment on column sct_action_type.sat_is_editable is 'Flag to indicate whether developer is allowed to change this action type (others are required by SCT';
comment on column sct_action_type.sat_raise_recursive is 'Flag to indicate whether action is executed if recursive level is greater than 1';
