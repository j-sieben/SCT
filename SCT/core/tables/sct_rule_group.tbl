create table sct_rule_group (	
  sgr_id number default on null sct_seq.nextval, 
	sgr_name varchar2(50 char), 
	sgr_description varchar2(200 char), 
	sgr_app_id number, 
	sgr_page_id number, 
  sgr_active &FLAG_TYPE. default &C_TRUE.,
  sgr_initialization_code clob,
  sgr_with_recursion &FLAG_TYPE. default &C_TRUE.,
	constraint p_sct_rule_group primary key (sgr_id),
  constraint u_sgr_name unique (sgr_name, sgr_app_id),
  constraint c_sgr_name check (sgr_name is not null),
  constraint c_sgr_active check (sgr_active in (&C_TRUE., &C_FALSE.)),
  constraint c_sgr_with_recursion check (sgr_with_recursion in (&C_TRUE., &C_FALSE.))
) 
organization index;

create or replace trigger trg_bri_sct_rule_group
  before insert on sct_rule_group
  for each row
begin
  /* TODO: refactor to IDENTITY-COLUMN if version 12c can be assumed! */
  :new.sgr_id := coalesce(:new.sgr_id, sct_seq.nextval);
end;
/

comment on table sct_rule_group is 'Table to store SCT Rule Groups';
comment on column sct_rule_group.sgr_id is 'PK, technical key';
comment on column sct_rule_group.sgr_name is 'NOT NULL, Unique name per application';
comment on column sct_rule_group.sgr_description is 'Optional description';
comment on column sct_rule_group.sgr_app_id is 'ID of the APEX application the rule group referes to';
comment on column sct_rule_group.sgr_page_id is 'ID of the APEX page the rule group referes to';
comment on column sct_rule_group.sgr_active is 'Flag to indicate whether rule group is in use';
comment on column sct_rule_group.sgr_initialization_code is 'Initialisierungscode der Regelgruppe. Wird aus Fetch Row-Prozess der referenzierten APEX-Seite abgeleitet.';
comment on column sct_rule_group.sgr_initialization_code is 'Flag, das anzeigt, ob diese Regel rekursive Regeln erlaubt oder nicht.';
comment on column sct_rule_group.sgr_initialization_code is 'Flag, das anzeigt, ob die Aktion Fehler beinhaltet';

